@model Moviepro.Models.TSql_Informations
@using Moviepro.Models
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    if (Session["ad"] == null)
    {
        Response.Redirect("/Home/Index");
    }
    TSql_Informations info = (TSql_Informations)Session["ad"];
}


<h2 style="color: red;text-align:center">Edit Information</h2>

@using (Html.BeginForm("Edit", "TSql_Informations", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDInfo)

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="form-control" name="DisplayName" value="@Model.DisplayName" autocomplete="off" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="form-control" name="UserName" value="@Model.UserName" autocomplete="off" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (info.IDInfo == Model.IDInfo)
        {
            <div class="form-group">
                <div class="col-md-10">
                    <input type="hidden" name="Role" value="@Model.Role" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="Role" class="form-control">
                        <option value="0">Người dùng</option>
                        <option value="2">Admin cấp 2</option>
                    </select>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="margin-left: 70%">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

